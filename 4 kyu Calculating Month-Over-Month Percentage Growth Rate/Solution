This link was helpful in solving this kata: https://learnsql.com/blog/revenue-growth-in-sql/

Description
Given a posts table that contains a created_at timestamp column write a query that returns a first date of the month, a number of posts created in a given month and a month-over-month growth rate.

The resulting set should be ordered chronologically by date.

Note:

percent growth rate can be negative
percent growth rate should be rounded to one digit after the decimal point and immediately followed by a percent symbol "%". See the desired output below for the reference.
Desired Output
The resulting set should look similar to the following:

date       | count | percent_growth
-----------+-------+---------------
2016-02-01 |   175 |           null
2016-03-01 |   338 |          93.1%
2016-04-01 |   345 |           2.1%
2016-05-01 |   295 |         -14.5%
2016-06-01 |   330 |          11.9%
...
date - (DATE) a first date of the month
count - (INT) a number of posts in a given month
percent_growth - (TEXT) a month-over-month growth rate expressed in percents


REQUIREMENTS: 
-- return a table with year-month, post count, and percent growth MoM
-- group posts by month, currently in day format
-- count the number posts in each month
-- calculate growth MoM 
-- Order by date

SOLUTION:
WITH CTE AS
  (SELECT 
    to_char(cast(created_at as date), 'YYYY-MM-01')::date AS "date", 
    COUNT(title)::int AS "count"
  FROM posts
  GROUP BY date
  ORDER BY date
   )
   
SELECT 
  date, 
  count,
  ROUND(CAST(100 * (count - LAG(count) OVER (ORDER BY date)) AS DECIMAL(36,2)) / CAST(LAG(count) OVER (ORDER BY date) AS DECIMAL(36,2)), 1) || '%' AS percent_growth
FROM CTE
